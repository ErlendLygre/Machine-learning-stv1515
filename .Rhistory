rename("n" = count)
parti_ord_med_lengde <- parti_ord %>%
group_by(document) %>%
summarise(lengde = sum(n)) %>%
left_join(parti_ord)
freq_plot <- parti_ord_med_lengde %>%
separate(document, c("Parti", "År")) %>%
ggplot(aes(n/lengde, fill = Parti)) +
geom_histogram(show.legend = FALSE) +
facet_wrap(~Parti, ncol = 3, scales = "free_y") +
theme(axis.text.x = element_text(angle = 90)) +
scale_x_continuous(limits = c(NA,.001), name ="andel ord") +
scale_y_continuous(name = "antall ord")
freq_plot
# kode som lager en figur som illustrerer grad av endring hos Senterpartiet
partier_med_total_n <- parti_ord_med_lengde %>% # bruk parti_program
group_by(term) %>% # grupper på ord
summarise(total_n = sum(n)) %>% # summer opp på tvers av program
right_join(parti_ord_med_lengde) %>%  # sett inn i parti_ord datasettet
arrange(desc(total_n)) # sorter synkende, og lag parti_ord
ord_prop <- partier_med_total_n %>%
filter(document == c("Senterpartiet 2001", "Senterpartiet 2005")) %>%
group_by(document) %>%
mutate(proportion = n / sum(n)) %>%
dplyr::select(- c(total_n, n,lengde)) %>%
spread(document, proportion) %>%
gather(document, proportion, `Senterpartiet 2005`)
fig_sp_01_05 <- ggplot(ord_prop, aes(x = proportion, y = `Senterpartiet 2001`,
color = abs(`Senterpartiet 2001` - proportion))) +
geom_abline(color = "grey40") +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = term), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format(), limits = c(0.00003,.002)) +
scale_y_log10(labels = percent_format(), limits = c(0.00003,.002)) +
scale_color_gradient(limits = c(0, 0.0001),
low = "darkslategray4",
high = "grey25") +
theme(legend.position = "none") +
labs(y = "Senterpartiet 2001", x = "Senterpartiet 2005") +
ggtitle("Forskjell i ordbruk mellom SP i 2001 og 2005")
fig_sp_01_05
# OBS: Jeg renser bort tegnsetting, tall, symboler og URLer på linje 75
parti_skilleord <- parti_ord %>%
separate(document, c("Parti", "År")) %>%
bind_tf_idf(term, Parti, n)
topp_10_skilleord <- parti_skilleord %>%
arrange(desc(tf_idf)) %>%
mutate(term = factor(term, levels = rev(unique(term)))) %>%
group_by(Parti) %>%
top_n(10) %>%
ungroup()
fig_skilleord <- topp_10_skilleord %>%
ggplot(aes(term, tf_idf, fill = Parti)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Parti, ncol =3, scale = "free") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y = element_blank()) +
coord_flip()
fig_skilleord
# kode årstall-skille her
årstall_skilleord <- parti_ord %>%
separate(document, c("Parti", "År")) %>%
bind_tf_idf(term, År, n)
topp_10_skilleord_år <- årstall_skilleord %>%
arrange(desc(tf_idf)) %>%
mutate(term = factor(term, levels = rev(unique(term)))) %>%
group_by(År) %>%
top_n(10) %>%
ungroup()
fig_skilleord_år <- topp_10_skilleord_år %>%
ggplot(aes(term, tf_idf, fill = År)) +
geom_col(show.legend = FALSE) +
facet_wrap(~År, ncol =3, scale = "free") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y = element_blank()) +
coord_flip()
fig_skilleord_år
library(gridExtra)
stop_words <- tibble(term = c("arbeiderpartiet", "arbeiderpartiets", "www.caplex.net", "må", "bør", "fremskrittspartiet", "fremskrittspartiets", "sosialistisk", "venstreparti", "sv", "senterpartiet", "senterpartiets", "sp", "krf", "kristelig", "folkeparti", "høyre", "venstre", "venstres", "à", "kristendemokratiet", "kristendemokratisk", "o"))
parti_ord_med_stopp <- parti_ord %>%
anti_join(stop_words)
parti_skilleord <- parti_ord_med_stopp %>%
separate(document, c("Parti", "År")) %>%
bind_tf_idf(term, Parti, n)
topp_10_skilleord_etter <- parti_skilleord %>%
arrange(desc(tf_idf)) %>%
mutate(term = factor(term, levels = rev(unique(term)))) %>%
group_by(Parti) %>%
top_n(10) %>%
ungroup()
topp_10_skilleord_etter$Parti <- paste(topp_10_skilleord_etter$Parti, " etter")
#topp_10_skilleord_for_etter <- topp_10_skilleord %>%
#  right_join(copy = TRUE, topp_10_skilleord_etter)
for_etter <- rbind(topp_10_skilleord, topp_10_skilleord_etter)
fig_skilleord_etter <- for_etter %>%
ggplot(aes(term, tf_idf, fill = Parti)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Parti, ncol =2, scale = "free") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y = element_blank()) +
coord_flip()
fig_skilleord_etter
#grid extra, grid arrange
# kode for ordliste her
ordliste <- dictionary(list(venstre = c("fagforening", "fagforeningene", "fagbevegelsen", "feminisme", "likelønn", "kvinner",
"solidaritet", "rettigheter", "natur",
"minoriteter", "diskrimminering", "trakaserring",
"velferd", "helse", "omsorg", "rettferdighet",
"privatisering", "abort", "arbeidskraft",
"miljø", "integrering", "fred",
"barnehage", "offentlig"),
hoyre = c("inntekt", "skatter", "Skatt", "frihet", "avgifter",
"trygghet", "arbeidsplasser", "bærekraft",
"forsvar", "innovasjon", "næringsliv",
"individ", "kultur", "historie",
"omstillingsevne", "privat", "valg",
"arbeidsmarkedet"),
proglobalisering =c("flyt", "handel", "fri", "vekst", "industri","kapitalflyt", "frihandel",                                                      "investeringer","massemedier", "kommunikasjon",
"muligheter", "verdikjeder",
"markeder", "samarbeid",
"EU", "europapolitikk",
"eksport", "import"),
antiglobalisering = c("lokal","støtte", "utnytte",  "selvforsynt", "trygg", "innvandrere", "integrere",                                               "beskytte", "landbruk", "suverenitet", "nasjonal", "stolt", "konge", "verdier" )))
hoyre_venstre_tabell <- parti_program_dfm %>%
dfm(dictionary = ordliste) %>%
tidy()%>%
spread(term, count) %>%
rename("parti" = document) %>%
mutate("hoyre_venstre" = hoyre-venstre, "globaliseringsvennlig" = proglobalisering-antiglobalisering) %>%
arrange(desc(hoyre_venstre)) %>%
select(parti, hoyre_venstre, globaliseringsvennlig)
hoyre_venstre_tabell
# ordliste-figur
ordliste_figur <- hoyre_venstre_tabell %>%
ggplot(aes(hoyre_venstre, globaliseringsvennlig)) +
geom_point() +
geom_text(aes(label=parti),hjust=0, vjust=0) +
scale_x_continuous("Høyreord minus venstreord") +
scale_y_continuous("Globaliseringsvennlighet")
ordliste_figur
# kode for å vise hvordan barnehager vektlegges.
kwic(parti_corpus, pattern = phrase("barnehage")) %>%
textplot_xray()
# cosine tabell
textstat_simil(dfm_ordliste, margin = "document", method = "cosine") %>%
round(3)
# cosine tabell
textstat_simil(dfm(parti_corpus), margin = "document", method = "cosine") %>%
round(3)
# wordscores
ws <- textmodel_wordscores(x = dfm_ordliste, y = c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,-1, NA, NA, 1)) # Frp og Rødt er referanse-dokumenter
# wordscores
ws <- textmodel_wordscores(x = dfm(parti_corpus), y = c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,-1, NA, NA, 1)) # Frp og Rødt er referanse-dokumenter
parti_plassering <- predict(ws, se.fit = TRUE, level = .99, interval = "confidence", rescaling = "none") # estimerer andre parti
textplot_scale1d(parti_plassering, margin = "documents")
ca2 <- textmodel_ca(parti_program_dfm, nd = 2)
ca2_pos <- as_tibble(cbind(ca2$rowcoord, names = partiene))
ggplot(ca2_pos, aes(x = Dim1, y = Dim2)) +
geom_text(aes(label = partiene)) +
theme(axis.title.x=element_blank(), # ta bort info å aksene
axis.text.x=element_blank(),
axis.title.y = element_blank(),
axis.text.y=element_blank()) # Gir dette noe mening?
parti_program_dfm <- parti_corpus %>%
tokens(what = "word",
remove_numbers = TRUE,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_separators = TRUE,
remove_url = TRUE) %>%
dfm(tolower = TRUE, remove = stopwords("no"))
parti_ord <- parti_program_dfm %>%
tidy() %>%
rename("n" = count)
parti_ord_med_lengde <- parti_ord %>%
group_by(document) %>%
summarise(lengde = sum(n)) %>%
left_join(parti_ord)
freq_plot <- parti_ord_med_lengde %>%
separate(document, c("Parti", "År")) %>%
ggplot(aes(n/lengde, fill = Parti)) +
geom_histogram(show.legend = FALSE) +
facet_wrap(~Parti, ncol = 3, scales = "free_y") +
theme(axis.text.x = element_text(angle = 90)) +
scale_x_continuous(limits = c(NA,.001), name ="andel ord") +
scale_y_continuous(name = "antall ord")
freq_plot
# kode for ordliste her
ordliste <- dictionary(list(venstre = c("fagforening", "fagforeningene", "fagbevegelsen", "feminisme", "likelønn", "kvinner",
"solidaritet", "rettigheter", "natur",
"minoriteter", "diskrimminering", "trakaserring",
"velferd", "helse", "omsorg", "rettferdighet",
"privatisering", "abort", "arbeidskraft",
"miljø", "integrering", "fred",
"barnehage", "offentlig"),
hoyre = c("inntekt", "skatter", "lønn", "Skatt", "frihet", "avgifter",
"trygghet", "arbeidsplasser", "bærekraft",
"forsvar", "innovasjon", "næringsliv",
"individ", "kultur", "historie",
"omstillingsevne", "privat", "valg", "bompenger", "motorvei",
"arbeidsmarkedet"),
proglobalisering =c("flyt", "handel", "fri", "vekst", "industri","kapitalflyt", "frihandel",                                                      "investeringer","massemedier", "kommunikasjon",
"muligheter", "verdikjeder",
"markeder", "samarbeid",
"EU", "europapolitikk",
"eksport", "import"),
antiglobalisering = c("lokal","støtte", "utnytte",  "selvforsynt", "trygg", "innvandrere", "integrere",                                               "beskytte", "landbruk", "suverenitet", "nasjonal", "stolt", "konge", "verdier" )))
hoyre_venstre_tabell <- parti_program_dfm %>%
dfm(dictionary = ordliste) %>%
tidy()%>%
spread(term, count) %>%
rename("parti" = document) %>%
mutate("hoyre_venstre" = hoyre-venstre, "globaliseringsvennlig" = proglobalisering-antiglobalisering) %>%
arrange(desc(hoyre_venstre)) %>%
select(parti, hoyre_venstre, globaliseringsvennlig)
hoyre_venstre_tabell
# kode for ordliste her
ordliste <- dictionary(list(venstre = c("fagforening", "fagforeningene", "fagbevegelsen", "feminisme", "likelønn", "kvinner",
"solidaritet", "rettigheter", "natur",
"minoriteter", "diskrimminering", "trakaserring",
"velferd", "helse", "omsorg", "rettferdighet",
"privatisering", "abort", "arbeidskraft",
"miljø", "integrering", "fred",
"barnehage", "offentlig"),
hoyre = c("inntekt", "skatter", "lønn", "Skatt", "frihet", "avgifter",
"trygghet", "arbeidsplasser", "bærekraft",
"forsvar", "innovasjon", "næringsliv",
"individ", "kultur", "historie",
"omstillingsevne", "privat", "valg", "bompenger", "motorvei", "individ", "individet",
"arbeidsmarkedet"),
proglobalisering =c("flyt", "handel", "fri", "vekst", "industri","kapitalflyt", "frihandel",                                                      "investeringer","massemedier", "kommunikasjon",
"muligheter", "verdikjeder",
"markeder", "samarbeid",
"EU", "europapolitikk",
"eksport", "import"),
antiglobalisering = c("lokal","støtte", "utnytte",  "selvforsynt", "trygg", "innvandrere", "integrere",                                               "beskytte", "landbruk", "suverenitet", "nasjonal", "stolt", "konge", "verdier" )))
hoyre_venstre_tabell <- parti_program_dfm %>%
dfm(dictionary = ordliste) %>%
tidy()%>%
spread(term, count) %>%
rename("parti" = document) %>%
mutate("hoyre_venstre" = hoyre-venstre, "globaliseringsvennlig" = proglobalisering-antiglobalisering) %>%
arrange(desc(hoyre_venstre)) %>%
select(parti, hoyre_venstre, globaliseringsvennlig)
hoyre_venstre_tabell
# kode for ordliste her
ordliste <- dictionary(list(venstre = c("fagforening", "fagforeningene", "fagbevegelsen", "feminisme", "likelønn", "kvinner",
"solidaritet", "rettigheter", "natur",
"minoriteter", "diskrimminering", "trakaserring",
"velferd", "helse", "omsorg", "rettferdighet",
"privatisering", "abort", "arbeidskraft",
"miljø", "integrering", "fred",
"barnehage", "offentlig"),
hoyre = c("inntekt", "skatter", "lønn", "Skatt", "frihet", "avgifter",
"trygghet", "arbeidsplasser", "bærekraft",
"forsvar", "innovasjon", "næringsliv",
"individ", "kultur", "historie",
"omstillingsevne", "privat", "valg", "bompenger", "motorvei", "veier",
"arbeidsmarkedet"),
proglobalisering =c("flyt", "handel", "fri", "vekst", "industri","kapitalflyt", "frihandel",                                                      "investeringer","massemedier", "kommunikasjon",
"muligheter", "verdikjeder",
"markeder", "samarbeid",
"EU", "europapolitikk",
"eksport", "import"),
antiglobalisering = c("lokal","støtte", "utnytte",  "selvforsynt", "trygg", "innvandrere", "integrere",                                               "beskytte", "landbruk", "suverenitet", "nasjonal", "stolt", "konge", "verdier" )))
hoyre_venstre_tabell <- parti_program_dfm %>%
dfm(dictionary = ordliste) %>%
tidy()%>%
spread(term, count) %>%
rename("parti" = document) %>%
mutate("hoyre_venstre" = hoyre-venstre, "globaliseringsvennlig" = proglobalisering-antiglobalisering) %>%
arrange(desc(hoyre_venstre)) %>%
select(parti, hoyre_venstre, globaliseringsvennlig)
hoyre_venstre_tabell
# kode for ordliste her
ordliste <- dictionary(list(venstre = c("fagforening", "fagforeningene", "fagbevegelsen", "feminisme", "likelønn", "kvinner",
"solidaritet", "rettigheter", "natur",
"minoriteter", "diskrimminering", "trakaserring",
"velferd", "helse", "omsorg", "rettferdighet",
"privatisering", "abort", "arbeidskraft",
"miljø", "integrering", "fred",
"barnehage", "offentlig"),
hoyre = c("inntekt", "skatter", "lønn", "Skatt", "frihet", "avgifter",
"trygghet", "arbeidsplasser", "bærekraft",
"forsvar", "innovasjon", "næringsliv",
"individ", "kultur", "historie",
"omstillingsevne", "privat", "valg", "bompenger", "motorvei", "veier", "flyktning",
"arbeidsmarkedet"),
proglobalisering =c("flyt", "handel", "fri", "vekst", "industri","kapitalflyt", "frihandel",                                                      "investeringer","massemedier", "kommunikasjon",
"muligheter", "verdikjeder",
"markeder", "samarbeid",
"EU", "europapolitikk",
"eksport", "import"),
antiglobalisering = c("lokal","støtte", "utnytte",  "selvforsynt", "trygg", "innvandrere", "integrere",                                               "beskytte", "landbruk", "suverenitet", "nasjonal", "stolt", "konge", "verdier" )))
hoyre_venstre_tabell <- parti_program_dfm %>%
dfm(dictionary = ordliste) %>%
tidy()%>%
spread(term, count) %>%
rename("parti" = document) %>%
mutate("hoyre_venstre" = hoyre-venstre, "globaliseringsvennlig" = proglobalisering-antiglobalisering) %>%
arrange(desc(hoyre_venstre)) %>%
select(parti, hoyre_venstre, globaliseringsvennlig)
hoyre_venstre_tabell
# kode for ordliste her
ordliste <- dictionary(list(venstre = c("fagforening", "fagforeningene", "fagbevegelsen", "feminisme", "likelønn", "kvinner",
"solidaritet", "rettigheter", "natur",
"minoriteter", "diskrimminering", "trakaserring",
"velferd", "helse", "omsorg", "rettferdighet",
"privatisering", "abort", "arbeidskraft",
"miljø", "integrering", "fred",
"barnehage", "offentlig"),
hoyre = c("inntekt", "skatter", "lønn", "Skatt", "frihet", "avgifter",
"trygghet", "arbeidsplasser", "bærekraft",
"forsvar", "innovasjon", "næringsliv",
"individ", "kultur", "historie",
"omstillingsevne", "privat", "valg", "bompenger", "motorvei", "veier", "flyktninger",
"arbeidsmarkedet"),
proglobalisering =c("flyt", "handel", "fri", "vekst", "industri","kapitalflyt", "frihandel",                                                      "investeringer","massemedier", "kommunikasjon",
"muligheter", "verdikjeder",
"markeder", "samarbeid",
"EU", "europapolitikk",
"eksport", "import"),
antiglobalisering = c("lokal","støtte", "utnytte",  "selvforsynt", "trygg", "innvandrere", "integrere",                                               "beskytte", "landbruk", "suverenitet", "nasjonal", "stolt", "konge", "verdier" )))
hoyre_venstre_tabell <- parti_program_dfm %>%
dfm(dictionary = ordliste) %>%
tidy()%>%
spread(term, count) %>%
rename("parti" = document) %>%
mutate("hoyre_venstre" = hoyre-venstre, "globaliseringsvennlig" = proglobalisering-antiglobalisering) %>%
arrange(desc(hoyre_venstre)) %>%
select(parti, hoyre_venstre, globaliseringsvennlig)
hoyre_venstre_tabell
# ordliste-figur
ordliste_figur <- hoyre_venstre_tabell %>%
ggplot(aes(hoyre_venstre, globaliseringsvennlig)) +
geom_point() +
geom_text(aes(label=parti),hjust=0, vjust=0) +
scale_x_continuous("Høyreord minus venstreord") +
scale_y_continuous("Globaliseringsvennlighet")
ordliste_figur
# kode for ordliste her
ordliste <- dictionary(list(venstre = c("fagforening", "fagforeningene", "fagbevegelsen", "feminisme", "likelønn", "kvinner",
"solidaritet", "rettigheter", "natur",
"minoriteter", "diskrimminering", "trakaserring",
"velferd", "helse", "omsorg", "rettferdighet",
"privatisering", "abort", "arbeidskraft",
"miljø", "integrering", "fred",
"barnehage", "offentlig"),
hoyre = c("inntekt", "skatter", "lønn", "Skatt", "frihet", "avgifter",
"trygghet", "arbeidsplasser",
"forsvar", "innovasjon", "næringsliv",
"individ", "kultur", "historie",
"omstillingsevne", "privat", "valg", "bompenger", "motorvei", "veier", "flyktninger",
"arbeidsmarkedet"),
proglobalisering =c("flyt", "handel", "fri", "vekst", "industri","kapitalflyt", "frihandel",                                                      "investeringer","massemedier", "kommunikasjon",
"muligheter", "verdikjeder",
"markeder", "samarbeid",
"EU", "europapolitikk",
"eksport", "import"),
antiglobalisering = c("lokal","støtte", "utnytte",  "selvforsynt", "trygg", "innvandrere", "integrere",                                               "beskytte", "landbruk", "suverenitet", "nasjonal", "stolt", "konge", "verdier" )))
hoyre_venstre_tabell <- parti_program_dfm %>%
dfm(dictionary = ordliste) %>%
tidy()%>%
spread(term, count) %>%
rename("parti" = document) %>%
mutate("hoyre_venstre" = hoyre-venstre, "globaliseringsvennlig" = proglobalisering-antiglobalisering) %>%
arrange(desc(hoyre_venstre)) %>%
select(parti, hoyre_venstre, globaliseringsvennlig)
hoyre_venstre_tabell
setwd("~/code/stv1515")
options(width=80)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE, tidy = TRUE, size="normal")
library(tidyverse)
library(quanteda)
set.seed(792374)
quanteda_options(threads = 8, language_stemmer = "no")
readtext::readtext("./programmer/", encoding = "LATIN1") %>% # les inn programmene
corpus() -> program # lag et korpus
docvars(program, "parti") <- c("Arbeiderpartiet", "FrP", "Høyre", "KrF", "miljøpartiet", "Rødt", "Senterpartiet", "SV","Venstre")
program %>%
corpus_reshape("paragraphs") -> avsnitt # mer sider enn avsnitt
library(tidyverse)
library(quanteda)
set.seed(792374)
quanteda_options(threads = 8, language_stemmer = "no")
readtext::readtext("./programmer/", encoding = "LATIN1") %>% # les inn programmene
corpus() -> program # lag et korpus
docvars(program, "parti") <- c("Arbeiderpartiet", "FrP", "Høyre", "KrF", "miljøpartiet", "Rødt", "Senterpartiet", "SV","Venstre")
program %>%
corpus_reshape("paragraphs") -> avsnitt # mer sider enn avsnitt
summary(program)
summary(avsnitt)
texts(avsnitt)[650] # Senterpartiet om høyere utdanning
library(tidyverse)
library(quanteda)
ap <- readtext::readtext("../tekst_intro/programmer/arbeiderpartiet.pdf", encoding = "LATIN1")
library(tidyverse)
library(quanteda)
ap <- readtext::readtext("./programmer/arbeiderpartiet.pdf", encoding = "LATIN1")
library(tidyverse)
library(quanteda)
ap <- readtext::readtext("./programmer/ap.pdf", encoding = "LATIN1")
corpus(ap) %>%
corpus_segment(
pattern ="\n+([:upper:]{2,})+([:blank:][:upper:]{2,})*\n+", # SKAL linjeskift, 2 store bokstaver,
# KAN blank og 2 store bokstaver
# SKAL linjeskift
valuetype = "regex", # bruk regex symboler, ikke glob eller fixed
# fixed er matching på nøyaktig samme mønster
case_insensitive = FALSE) -> program_kapitler #
program_kapitler
texts(program_kapitler)[4] # ser på den første
View(program_kapitler)
program_kapitler[["documents"]]
program_kapitler["documents"]
program_kapitler[1]
program_kapitler[2]
partier <- list.files("../tekst_intro/programmer/") # les navn på alle filene i denne folderen
ap_miljo <- partier[c(1,5)]  # AP og miljøpartiet
ap_mil <- readtext::readtext(paste0("../tekst_intro/programmer/",ap_miljo),
encoding = "LATIN1") # Les inn disse 2 programmene
partier <- list.files("../tekst_intro/programmer/") # les navn på alle filene i denne folderen
ap_miljo <- partier[c(1,5)]  # AP og miljøpartiet
ap_mil <- readtext::readtext(paste0("./programmer/",ap_miljo),
encoding = "LATIN1") # Les inn disse 2 programmene
partier <- list.files("./programmer/") # les navn på alle filene i denne folderen
ap_miljo <- partier[c(1,5)]  # AP og miljøpartiet
ap_mil <- readtext::readtext(paste0("./programmer/",ap_miljo),
encoding = "LATIN1") # Les inn disse 2 programmene
ap_mil <- corpus(ap_mil) # lag et korpus
docvars(ap_mil, "parti") <- c("Arbeiderpartiet", "Miljøpartiet") # Legg til navn
corpus_segment(ap_mil,
pattern ="\n+([:upper:]{2,})+([:blank:][:upper:]{2,})*\n+",  # SKAL linjeskift, 2 store bokstaver,
# KAN blank og 2 store bokstaver
# SKAL linjeskift
valuetype = "regex", # bruk regex
case_insensitive = FALSE) -> ap_mil_corpus  # default case_insensitive er TRUE
summary(ap_mil_corpus) # Lag en oppsummerende tabell
docvars(ap_mil_corpus) # Nå er overskrifter blitt en docvar
textplot_xray( # se hvordan enkelte nøkkelord fordeler seg
kwic(ap_mil_corpus, pattern = "næringsliv"),
kwic(ap_mil_corpus, pattern = "miljø"))
id_ord <- c("arbeiderpartiet", "grønne", "miljøpartiet", "arbeiderbevegelsen") # tar bort noen id_ord
ap_mil_corpus %>%
dfm(remove_numbers = TRUE, remove_punct = TRUE, # tar bort tall of punktum
stem = TRUE, # prøver stem for å fslå sammen ord med ullik endelee
remove =  c(stopwords("no"),id_ord)) -> ap_miljo_dfm # tar bort id_ord
ap_miljo_dfm
id_ord <- c("arbeiderpartiet", "grønne", "miljøpartiet", "arbeiderbevegelsen") # tar bort noen id_ord
ap_mil_corpus %>%
dfm(remove_numbers = TRUE, remove_punct = TRUE, # tar bort tall of punktum
stem = TRUE, # prøver stem for å fslå sammen ord med ullik endelee
remove =  c(stopwords("no"),id_ord)) -> ap_miljo_dfm # tar bort id_ord
ap_miljo_dfm
?dfm_weight
ap_m_kmeans <- kmeans( # en kmeans model
dfm_weight(ap_miljo_dfm, "prop"),  # med en vektet ord-frekvens-matrise
20, # 20 grupper
nstart = 20) # 20 ulike startverdier
View(ap_m_kmeans)
View(ap)
as_tibble(data.frame(class = ap_m_kmeans$cluster, # sett sammen til et datasett
title = docvars(ap_mil_corpus)["pattern"],
parti = docvars(ap_mil_corpus)["parti"])) -> k_means_20
View(k_means_20)
getwd()
library(tidyverse)
library(quanteda)
set.seed(792374)
quanteda_options(threads = 8, language_stemmer = "no")
readtext::readtext("/Users/erlendtlygre/code/stv1515/programmer/", encoding = "LATIN1") %>% # les inn programmene
corpus() -> program # lag et korpus
docvars(program, "parti") <- c("Arbeiderpartiet", "FrP", "Høyre", "KrF", "miljøpartiet", "Rødt", "Senterpartiet", "SV","Venstre")
program %>%
corpus_reshape("paragraphs") -> avsnitt # mer sider enn avsnitt
getwd()
library(tidyverse)
library(quanteda)
set.seed(792374)
quanteda_options(threads = 8, language_stemmer = "no")
readtext::readtext("/Users/erlendtlygre/code/stv1515/programmer/", encoding = "LATIN1") %>% # les inn programmene
corpus() -> program # lag et korpus
docvars(program, "parti") <- c("Arbeiderpartiet", "FrP", "Høyre", "KrF", "miljøpartiet", "Rødt", "Senterpartiet", "SV","Venstre")
program %>%
corpus_reshape("paragraphs") -> avsnitt # mer sider enn avsnitt
View(program)
summary(program)
summary(avsnitt)
?corpus_reshape
texts(avsnitt)
texts(avsnitt)[1]
ap <- readtext::readtext("./programmer/ap.pdf", encoding = "LATIN1")
partier <- list.files("./programmer/") # les navn på alle filene i denne folderen
ap_miljo <- partier[c(1,5)]  # AP og miljøpartiet
ap_mil <- readtext::readtext(paste0("./programmer/",ap_miljo),
encoding = "LATIN1") # Les inn disse 2 programmene
ap_mil <- corpus(ap_mil) # lag et korpus
docvars(ap_mil, "parti") <- c("Arbeiderpartiet", "Miljøpartiet") # Legg til navn
corpus_segment(ap_mil,
pattern ="\n+([:upper:]{2,})+([:blank:][:upper:]{2,})*\n+",  # SKAL linjeskift, 2 store bokstaver,
# KAN blank og 2 store bokstaver
# SKAL linjeskift
valuetype = "regex", # bruk regex
case_insensitive = FALSE) -> ap_mil_corpus  # default case_insensitive er TRUE
summary(ap_mil_corpus) # Lag en oppsummerende tabell
View(ap_mil)
